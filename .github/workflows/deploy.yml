name: Deploy to gh-pages 
on:
  workflow_call:    
    inputs:
      use-cache:
        type: boolean
      targets:
        type: string
  repository_dispatch:
    types: deploy
  workflow_dispatch:
    inputs:
      use-cache:
        description: Use Cache
        type: boolean
        default: true
      targets:
        description: List of branches to deploy.
        type: text
env:
  MODULE_LIST_PATH: docs/assets/module-list.json
  PYTHON_VERSION: 3.x
  GH_TOKEN: ${{ github.token }}
  DEPLOY_URL: https://callumwalley.github.io/mkdocs-demo-deploy/
permissions: write-all
jobs:
  documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - name: Print Inputs
        run: |
          echo "::notice title=Use cache: ${{ github.event.client_payload.use-cache || inputs.use-cache }} :: Use cache: ${{ github.event.client_payload.use-cache || inputs.use-cache }}"
          echo "::notice title=PR branches: ${{ github.event.client_payload.targets || inputs.targets }}:: Targets: ${{ github.event.client_payload.targets || inputs.targets }}"
          if [ -z ${{ ( github.event.client_payload.targets || inputs.targets ) }} ];then
              echo "::error title=No Inputs::No input branches given. Nothing will be built."
              exit 1
          fi
      - if: ${{ github.event.client_payload.use-cache || inputs.use-cache }}
        name: Restore build cache
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          key: mkdocs-cache-${{ hashfiles('./*') }}
          restore-keys: |
            mkdocs-cache-
          path: ./*
      - name: Create dev sub-deployments
        run: |
          for target in ${{ github.event.client_payload.targets || inputs.targets }}; do
            echo "::group::Building Repo:'${target%:*}' Branch:'${target#*:}"
            echo "Setting Up Directories"
            rm -rf repo && mkdir -vp repo
            mkdir -vp "public/${target%:*}/${target#*:}"        
            git clone --single-branch --branch ${target#*:} https://github.com/${target%:*} repo || \
            { echo "::warning title:Failed to serve ${target} :: Could not checkout https://github.com/${target%:*}, See log for more details." && continue }
            echo "Installing Dependencies"
            (cd repo && pip install -r requirements.txt) || \
            { echo "::warning title:Failed to serve ${target} :: Could not install dependencies, see log for more details." && continue }
            echo "Building"
            (cd repo && mkdocs build --dirty --site-dir ../public/${target%:*}/${target#*:}) || \
            { echo "::warning title:Failed to serve ${target} :: Could not build, see log for more details." && continue }
            chmod -c -R +rX public/${target%:*} 
            echo "::endgroup::"
            echo "::notice title=Build Sucessful::Branch '${target}' built successfully"
          done

      - name: Make index.html
        run: |
          html="<h2>Currently Deployed Branches</h2><br><ul>"
          for REPO in public/*/*;do
            html="${html}<li>${REPO#*/}<ul>"
            for BRANCH in $REPO/*;do
              SANSD=${BRANCH#*/}
              html="${html}<li><a href=\"${DEPLOY_URL}${SANSD}\">$(stat -c %w ${BRANCH})</a> from <a href=\"https://github.com/${REPO#*/}/pull/$( basename ${SANSD} )\">${SANSD#*/}</a></li>"
            done
            html="${html}</ul></li>"
          done
          echo "${html}</ul>" > public/index.html
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
      - name: Save build cache
        uses: actions/cache/save@v4
        id: cache-save
        with:
          key: mkdocs-cache-${{ hashfiles('./*') }}
          path: ./*
      - name: Print message
        run: |
          for target in ${{ github.event.client_payload.targets || inputs.targets }}; do                
            echo "::notice title=Deployment Sucessful::Branch '${target}' deployed to ${DEPLOY_URL}${target%:*}/${target#*:}"
          done
